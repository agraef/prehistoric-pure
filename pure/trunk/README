
PURE - The Pure programming language.

Pure is a functional programming language based on term rewriting. It has a
modern syntax featuring curried function applications, lexical closures and
equational definitions with pattern matching, and thus is somewhat similar to
languages of the Haskell and ML variety. But Pure is also a very dynamic and
reflective language, and is more like Lisp in this respect. The interpreter
has an LLVM backend to do JIT compilation, hence programs run blazingly fast
and interfacing to C modules is easy.

Please note that this is a preliminary, "beta" release, so please report bugs
to the author. Also have a look at the TODO file for stuff that still needs to
be done.

WHERE TO GET IT

You can find tarballs and the svn repository at http://pure-lang.sf.net.

LICENSE

GPL V3 or later. See the accompanying COPYING file for details. Note that the
sample scripts in the examples subdir, even though they are bundled with the
sources, are considered to be in the public domain, so feel free to use them
for whatever purpose.

INSTALLATION

Please see the INSTALL file for detailed instructions. On most Unix-like
systems, the usual 'make && sudo make install' should do the trick. (No
'configure' step necessary.) This requires GNU make and g++. For other setups,
you'll probably have to fiddle with the Makefile and the sources. The sources
should be pretty portable, but the Makefile really needs GNU make right now.
You'll also need LLVM for the compiler backend (version 2.2 has been tested).
For your convenience, instructions for installing LLVM are also included in
the INSTALL file.

USING PURE

Pure scripts are just ordinary text files, which can be created with any text
editor. The source directory contains Pure syntax highlighting files for Kate
and Vim (no Emacs mode yet, sorry). You might wish to install these into your
katepart/syntax and .vim/syntax directories, respectively. (For Vim you also
need to enable the syntax highlighting for .pure files; see the comments at
the beginning of pure.vim for details.)

See the manpage ('man pure' after installation) for information on how to use
the interpreter and a brief description of the Pure language. Some example
programs can be found in the examples subdir in the sources; in particular,
have a look at the hello.pure program which will quickly give you an idea how
Pure programs look like. You should also browse the scripts in the lib
directory which contain the "built-in" definitions readily available when you
start up the Pure interpreter.

This is currently all you get; more elaborate documentation of the Pure
language still needs to be written. But Pure is a really simple language; if
you have some experience using FPLs then you should be able to find your way
with the manpage and the provided examples. Of course, you can also post
questions to the Pure mailing list (see http://pure-lang.sf.net).

Enjoy! :)

AUTHOR

Albert Graef
Dept. of Computer Music
Johannes Gutenberg University of Mainz
Germany

<Dr.Graef at t-online.de>
http://pure-lang.sf.net
